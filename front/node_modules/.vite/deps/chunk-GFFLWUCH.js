import {
  makeSizeProps,
  useSize
} from "./chunk-3AVUKXS4.js";
import {
  useTextColor
} from "./chunk-EHN6YYUB.js";
import {
  makeTagProps
} from "./chunk-4EGG5NBS.js";
import {
  IconValue,
  useIcon
} from "./chunk-V2ZLN4G4.js";
import {
  makeThemeProps,
  provideTheme
} from "./chunk-E634YU6E.js";
import {
  convertToUnit,
  defineComponent,
  flattenFragments,
  propsFactory,
  useRender
} from "./chunk-OB2LCWA7.js";
import {
  computed,
  createVNode,
  toRef
} from "./chunk-BX7HPCYS.js";

// node_modules/vuetify/lib/components/VIcon/VIcon.mjs
import "D:/BISITE/prototypeApp/prototypeApp/front/node_modules/vuetify/lib/components/VIcon/VIcon.css";
var makeVIconProps = propsFactory({
  color: String,
  start: Boolean,
  end: Boolean,
  icon: IconValue,
  ...makeSizeProps(),
  ...makeTagProps({
    tag: "i"
  }),
  ...makeThemeProps()
}, "v-icon");
var VIcon = defineComponent({
  name: "VIcon",
  props: makeVIconProps(),
  setup(props, _ref) {
    let {
      attrs,
      slots
    } = _ref;
    let slotIcon;
    if (slots.default) {
      slotIcon = computed(() => {
        var _slots$default, _flattenFragments$fil;
        const slot = (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots);
        if (!slot)
          return;
        return (_flattenFragments$fil = flattenFragments(slot).filter((node) => node.children && typeof node.children === "string")[0]) == null ? void 0 : _flattenFragments$fil.children;
      });
    }
    const {
      themeClasses
    } = provideTheme(props);
    const {
      iconData
    } = useIcon(slotIcon || props);
    const {
      sizeClasses
    } = useSize(props);
    const {
      textColorClasses,
      textColorStyles
    } = useTextColor(toRef(props, "color"));
    useRender(() => createVNode(iconData.value.component, {
      "tag": props.tag,
      "icon": iconData.value.icon,
      "class": ["v-icon", "notranslate", themeClasses.value, sizeClasses.value, textColorClasses.value, {
        "v-icon--clickable": !!attrs.onClick,
        "v-icon--start": props.start,
        "v-icon--end": props.end
      }],
      "style": [!sizeClasses.value ? {
        fontSize: convertToUnit(props.size),
        height: convertToUnit(props.size),
        width: convertToUnit(props.size)
      } : void 0, textColorStyles.value],
      "role": attrs.onClick ? "button" : void 0,
      "aria-hidden": !attrs.onClick
    }, null));
    return {};
  }
});

export {
  VIcon
};
//# sourceMappingURL=chunk-GFFLWUCH.js.map
