{
  "version": 3,
  "sources": ["../../vuetify/src/components/VDefaultsProvider/VDefaultsProvider.tsx", "../../vuetify/src/composables/dimensions.ts", "../../vuetify/src/composables/router.tsx"],
  "sourcesContent": ["// Composables\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { defineComponent, toRefs } from 'vue'\n\n// Types\nimport type { DefaultsOptions } from '@/composables/defaults'\nimport type { PropType } from 'vue'\n\nexport const VDefaultsProvider = defineComponent({\n  name: 'VDefaultsProvider',\n\n  props: {\n    defaults: Object as PropType<DefaultsOptions>,\n    reset: [Number, String],\n    root: Boolean,\n    scoped: Boolean,\n  },\n\n  setup (props, { slots }) {\n    const { defaults, reset, root, scoped } = toRefs(props)\n\n    provideDefaults(defaults, {\n      reset,\n      root,\n      scoped,\n    })\n\n    return () => slots.default?.()\n  },\n})\n", "// Utilities\nimport { computed } from 'vue'\nimport { convertToUnit, propsFactory } from '@/util'\n\n// Types\nexport interface DimensionProps {\n  height?: number | string\n  maxHeight?: number | string\n  maxWidth?: number | string\n  minHeight?: number | string\n  minWidth?: number | string\n  width?: number | string\n}\n\n// Composables\nexport const makeDimensionProps = propsFactory({\n  height: [Number, String],\n  maxHeight: [Number, String],\n  maxWidth: [Number, String],\n  minHeight: [Number, String],\n  minWidth: [Number, String],\n  width: [Number, String],\n}, 'dimension')\n\nexport function useDimension (props: DimensionProps) {\n  const dimensionStyles = computed(() => ({\n    height: convertToUnit(props.height),\n    maxHeight: convertToUnit(props.maxHeight),\n    maxWidth: convertToUnit(props.maxWidth),\n    minHeight: convertToUnit(props.minHeight),\n    minWidth: convertToUnit(props.minWidth),\n    width: convertToUnit(props.width),\n  }))\n\n  return { dimensionStyles }\n}\n", "// Utilities\nimport { getCurrentInstance, IN_BROWSER, propsFactory } from '@/util'\nimport {\n  computed,\n  nextTick,\n  onScopeDispose,\n  resolveDynamicComponent,\n  toRef,\n} from 'vue'\n\n// Types\nimport type { ComputedRef, PropType, Ref, SetupContext } from 'vue'\nimport type {\n  RouterLink as _RouterLink,\n  useLink as _useLink,\n  NavigationGuardNext,\n  RouteLocationNormalizedLoaded,\n  RouteLocationRaw,\n  Router,\n  UseLinkOptions,\n} from 'vue-router'\n\nexport function useRoute (): Ref<RouteLocationNormalizedLoaded | undefined> {\n  const vm = getCurrentInstance('useRoute')\n\n  return computed(() => vm?.proxy?.$route)\n}\n\nexport function useRouter (): Router | undefined {\n  return getCurrentInstance('useRouter')?.proxy?.$router\n}\n\nexport interface LinkProps {\n  href: string | undefined\n  replace: boolean | undefined\n  to: RouteLocationRaw | undefined\n  exact: boolean | undefined\n}\n\nexport interface UseLink extends Omit<Partial<ReturnType<typeof _useLink>>, 'href'> {\n  isLink: ComputedRef<boolean>\n  isClickable: ComputedRef<boolean>\n  href: Ref<string | undefined>\n}\n\nexport function useLink (props: LinkProps, attrs: SetupContext['attrs']): UseLink {\n  const RouterLink = resolveDynamicComponent('RouterLink') as typeof _RouterLink | string\n\n  const isLink = computed(() => !!(props.href || props.to))\n  const isClickable = computed(() => {\n    return isLink?.value || !!(attrs.onClick || attrs.onClickOnce)\n  })\n\n  if (typeof RouterLink === 'string') {\n    return {\n      isLink,\n      isClickable,\n      href: toRef(props, 'href'),\n    }\n  }\n\n  const link = props.to ? RouterLink.useLink(props as UseLinkOptions) : undefined\n\n  return {\n    isLink,\n    isClickable,\n    route: link?.route,\n    navigate: link?.navigate,\n    isActive: link && computed(() => props.exact ? link.isExactActive?.value : link.isActive?.value),\n    href: computed(() => props.to ? link?.route.value.href : props.href),\n  }\n}\n\nexport const makeRouterProps = propsFactory({\n  href: String,\n  replace: Boolean,\n  to: [String, Object] as PropType<RouteLocationRaw>,\n  exact: Boolean,\n}, 'router')\n\nlet inTransition = false\nexport function useBackButton (router: Router | undefined, cb: (next: NavigationGuardNext) => void) {\n  let popped = false\n  let removeBefore: (() => void) | undefined\n  let removeAfter: (() => void) | undefined\n\n  if (IN_BROWSER) {\n    nextTick(() => {\n      window.addEventListener('popstate', onPopstate)\n      removeBefore = router?.beforeEach((to, from, next) => {\n        if (!inTransition) {\n          setTimeout(() => popped ? cb(next) : next())\n        } else {\n          popped ? cb(next) : next()\n        }\n        inTransition = true\n      })\n      removeAfter = router?.afterEach(() => {\n        inTransition = false\n      })\n    })\n    onScopeDispose(() => {\n      window.removeEventListener('popstate', onPopstate)\n      removeBefore?.()\n      removeAfter?.()\n    })\n  }\n\n  function onPopstate (e: PopStateEvent) {\n    if (e.state?.replaced) return\n\n    popped = true\n    setTimeout(() => (popped = false))\n  }\n}\n"],
  "mappings": "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",
  "names": ["VDefaultsProvider", "defineComponent", "name", "props", "defaults", "Object", "reset", "Number", "String", "root", "Boolean", "scoped", "setup", "slots", "toRefs", "provideDefaults", "default", "makeDimensionProps", "propsFactory", "height", "Number", "String", "maxHeight", "maxWidth", "minHeight", "minWidth", "width", "useDimension", "props", "dimensionStyles", "computed", "convertToUnit", "useRouter", "getCurrentInstance", "proxy", "$router", "useLink", "props", "attrs", "RouterLink", "resolveDynamicComponent", "isLink", "computed", "href", "to", "isClickable", "value", "onClick", "onClickOnce", "toRef", "link", "undefined", "route", "navigate", "isActive", "exact", "isExactActive", "makeRouterProps", "propsFactory", "String", "replace", "Boolean", "Object", "inTransition", "useBackButton", "router", "cb", "popped", "removeBefore", "removeAfter", "IN_BROWSER", "nextTick", "window", "addEventListener", "onPopstate", "beforeEach", "from", "next", "setTimeout", "afterEach", "onScopeDispose", "removeEventListener", "e", "state", "replaced"]
}
