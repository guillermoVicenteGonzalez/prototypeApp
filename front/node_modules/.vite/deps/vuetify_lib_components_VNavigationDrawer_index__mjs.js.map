{
  "version": 3,
  "sources": ["../../vuetify/src/components/VNavigationDrawer/VNavigationDrawer.tsx", "../../vuetify/src/components/VNavigationDrawer/sticky.ts", "../../vuetify/src/composables/touch.ts", "../../vuetify/src/components/VNavigationDrawer/touch.ts"],
  "sourcesContent": ["// Styles\nimport './VNavigationDrawer.sass'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useDisplay } from '@/composables/display'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useRouter } from '@/composables/router'\nimport { useRtl } from '@/composables'\nimport { useSsrBoot } from '@/composables/ssrBoot'\nimport { useSticky } from './sticky'\nimport { useTouch } from './touch'\n\n// Utilities\nimport { computed, onBeforeMount, ref, toRef, Transition, watch } from 'vue'\nimport { convertToUnit, defineComponent, toPhysical, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst locations = ['start', 'end', 'left', 'right', 'bottom'] as const\n\nexport const VNavigationDrawer = defineComponent({\n  name: 'VNavigationDrawer',\n\n  props: {\n    color: String,\n    disableResizeWatcher: Boolean,\n    disableRouteWatcher: Boolean,\n    expandOnHover: Boolean,\n    floating: Boolean,\n    modelValue: {\n      type: Boolean as PropType<boolean | null>,\n      default: null,\n    },\n    permanent: Boolean,\n    rail: Boolean,\n    railWidth: {\n      type: [Number, String],\n      default: 56,\n    },\n    scrim: {\n      type: [String, Boolean],\n      default: true,\n    },\n    image: String,\n    temporary: Boolean,\n    touchless: Boolean,\n    width: {\n      type: [Number, String],\n      default: 256,\n    },\n    location: {\n      type: String as PropType<typeof locations[number]>,\n      default: 'start',\n      validator: (value: any) => locations.includes(value),\n    },\n    sticky: Boolean,\n\n    ...makeBorderProps(),\n    ...makeElevationProps(),\n    ...makeLayoutItemProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps({ tag: 'nav' }),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const { isRtl } = useRtl()\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { elevationClasses } = useElevation(props)\n    const { mobile } = useDisplay()\n    const { roundedClasses } = useRounded(props)\n    const router = useRouter()\n    const isActive = useProxiedModel(props, 'modelValue', null, v => !!v)\n    const { ssrBootStyles } = useSsrBoot()\n\n    const rootEl = ref<HTMLElement>()\n    const isHovering = ref(false)\n\n    const width = computed(() => {\n      return (props.rail && props.expandOnHover && isHovering.value)\n        ? Number(props.width)\n        : Number(props.rail ? props.railWidth : props.width)\n    })\n    const location = computed(() => {\n      return toPhysical(props.location, isRtl.value) as 'left' | 'right' | 'bottom'\n    })\n    const isTemporary = computed(() => !props.permanent && (mobile.value || props.temporary))\n    const isSticky = computed(() =>\n      props.sticky &&\n      !isTemporary.value &&\n      location.value !== 'bottom'\n    )\n\n    if (!props.disableResizeWatcher) {\n      watch(isTemporary, val => !props.permanent && (isActive.value = !val))\n    }\n\n    if (!props.disableRouteWatcher && router) {\n      watch(router.currentRoute, () => isTemporary.value && (isActive.value = false))\n    }\n\n    watch(() => props.permanent, val => {\n      if (val) isActive.value = true\n    })\n\n    onBeforeMount(() => {\n      if (props.modelValue != null || isTemporary.value) return\n\n      isActive.value = props.permanent || !mobile.value\n    })\n\n    const { isDragging, dragProgress, dragStyles } = useTouch({\n      isActive,\n      isTemporary,\n      width,\n      touchless: toRef(props, 'touchless'),\n      position: location,\n    })\n\n    const layoutSize = computed(() => {\n      const size = isTemporary.value ? 0\n        : props.rail && props.expandOnHover ? Number(props.railWidth)\n        : width.value\n\n      return isDragging.value ? size * dragProgress.value : size\n    })\n\n    const { layoutItemStyles, layoutRect, layoutItemScrimStyles } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: location,\n      layoutSize,\n      elementSize: width,\n      active: computed(() => isActive.value || isDragging.value),\n      disableTransitions: computed(() => isDragging.value),\n      absolute: computed(() =>\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        props.absolute || (isSticky.value && typeof isStuck.value !== 'string')\n      ),\n    })\n\n    const { isStuck, stickyStyles } = useSticky({ rootEl, isSticky, layoutItemStyles })\n\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null\n    }))\n    const scrimStyles = computed(() => ({\n      ...isDragging.value ? {\n        opacity: dragProgress.value * 0.2,\n        transition: 'none',\n      } : undefined,\n      ...layoutRect.value ? {\n        left: convertToUnit(layoutRect.value.left),\n        right: convertToUnit(layoutRect.value.right),\n        top: convertToUnit(layoutRect.value.top),\n        bottom: convertToUnit(layoutRect.value.bottom),\n      } : undefined,\n      ...layoutItemScrimStyles.value,\n    }))\n\n    provideDefaults({\n      VList: {\n        bgColor: 'transparent',\n      },\n    })\n\n    useRender(() => {\n      const hasImage = (slots.image || props.image)\n\n      return (\n        <>\n          <props.tag\n            ref={ rootEl }\n            onMouseenter={ () => (isHovering.value = true) }\n            onMouseleave={ () => (isHovering.value = false) }\n            class={[\n              'v-navigation-drawer',\n              `v-navigation-drawer--${location.value}`,\n              {\n                'v-navigation-drawer--expand-on-hover': props.expandOnHover,\n                'v-navigation-drawer--floating': props.floating,\n                'v-navigation-drawer--is-hovering': isHovering.value,\n                'v-navigation-drawer--rail': props.rail,\n                'v-navigation-drawer--temporary': isTemporary.value,\n                'v-navigation-drawer--active': isActive.value,\n                'v-navigation-drawer--sticky': isSticky.value,\n              },\n              themeClasses.value,\n              backgroundColorClasses.value,\n              borderClasses.value,\n              elevationClasses.value,\n              roundedClasses.value,\n            ]}\n            style={[\n              backgroundColorStyles.value,\n              layoutItemStyles.value,\n              dragStyles.value,\n              ssrBootStyles.value,\n              stickyStyles.value,\n            ]}\n            { ...attrs }\n          >\n            { hasImage && (\n              <div key=\"image\" class=\"v-navigation-drawer__img\">\n                { slots.image\n                  ? slots.image?.({ image: props.image })\n                  : (<img src={ props.image } alt=\"\" />)\n                }\n              </div>\n            )}\n\n            { slots.prepend && (\n              <div class=\"v-navigation-drawer__prepend\">\n                { slots.prepend?.() }\n              </div>\n            )}\n\n            <div class=\"v-navigation-drawer__content\">\n              { slots.default?.() }\n            </div>\n\n            { slots.append && (\n              <div class=\"v-navigation-drawer__append\">\n                { slots.append?.() }\n              </div>\n            )}\n          </props.tag>\n\n          <Transition name=\"fade-transition\">\n            { isTemporary.value && (isDragging.value || isActive.value) && !!props.scrim && (\n              <div\n                class={['v-navigation-drawer__scrim', scrimColor.backgroundColorClasses.value]}\n                style={[scrimStyles.value, scrimColor.backgroundColorStyles.value]}\n                onClick={ () => isActive.value = false }\n              />\n            )}\n          </Transition>\n        </>\n      )\n    })\n\n    return {\n      isStuck,\n    }\n  },\n})\n\nexport type VNavigationDrawer = InstanceType<typeof VNavigationDrawer>\n", "import type { CSSProperties, Ref } from 'vue'\nimport { computed, onBeforeUnmount, onMounted, ref, watch } from 'vue'\nimport { convertToUnit } from '@/util'\n\ninterface StickyProps {\n  rootEl: Ref<HTMLElement | undefined>\n  isSticky: Ref<boolean>\n  layoutItemStyles: Ref<CSSProperties>\n}\n\nexport function useSticky ({ rootEl, isSticky, layoutItemStyles }: StickyProps) {\n  const isStuck = ref<boolean | 'top' | 'bottom'>(false)\n  const stuckPosition = ref(0)\n\n  const stickyStyles = computed(() => {\n    const side = typeof isStuck.value === 'boolean' ? 'top' : isStuck.value\n    return [\n      isSticky.value ? { top: 'auto', bottom: 'auto', height: undefined } : undefined,\n      isStuck.value\n        ? { [side]: convertToUnit(stuckPosition.value) }\n        : { top: layoutItemStyles.value.top },\n    ]\n  })\n\n  onMounted(() => {\n    watch(isSticky, val => {\n      if (val) {\n        window.addEventListener('scroll', onScroll, { passive: true })\n      } else {\n        window.removeEventListener('scroll', onScroll)\n      }\n    }, { immediate: true })\n  })\n\n  onBeforeUnmount(() => {\n    document.removeEventListener('scroll', onScroll)\n  })\n\n  let lastScrollTop = 0\n  function onScroll () {\n    const direction = lastScrollTop > window.scrollY ? 'up' : 'down'\n    const rect = rootEl.value!.getBoundingClientRect()\n    const layoutTop = parseFloat(layoutItemStyles.value.top ?? 0)\n    const top = window.scrollY - Math.max(0, stuckPosition.value - layoutTop)\n    const bottom =\n      rect.height +\n      Math.max(stuckPosition.value, layoutTop) -\n      window.scrollY -\n      window.innerHeight\n\n    if (rect.height < window.innerHeight - layoutTop) {\n      isStuck.value = 'top'\n      stuckPosition.value = layoutTop\n    } else if (\n      (direction === 'up' && isStuck.value === 'bottom') ||\n      (direction === 'down' && isStuck.value === 'top')\n    ) {\n      stuckPosition.value = window.scrollY + rect.top\n      isStuck.value = true\n    } else if (direction === 'down' && bottom <= 0) {\n      stuckPosition.value = 0\n      isStuck.value = 'bottom'\n    } else if (direction === 'up' && top <= 0) {\n      stuckPosition.value = rect.top + top\n      isStuck.value = 'top'\n    }\n\n    lastScrollTop = window.scrollY\n  }\n\n  return { isStuck, stickyStyles }\n}\n", "import { CircularBuffer } from '@/util'\n\nconst HORIZON = 100 // ms\nconst HISTORY = 20 // number of samples to keep\n\nexport interface Sample {\n  t: number\n  d: number\n}\n\n/** @see https://android.googlesource.com/platform/frameworks/native/+/master/libs/input/VelocityTracker.cpp */\nfunction kineticEnergyToVelocity (work: number) {\n  const sqrt2 = 1.41421356237\n  return (work < 0 ? -1.0 : 1.0) * Math.sqrt(Math.abs(work)) * sqrt2\n}\n\n/**\n * Returns pointer velocity in px/s\n */\nexport function calculateImpulseVelocity (samples: Sample[]) {\n  // The input should be in reversed time order (most recent sample at index i=0)\n  if (samples.length < 2) {\n    // if 0 or 1 points, velocity is zero\n    return 0\n  }\n  // if (samples[1].t > samples[0].t) {\n  //   // Algorithm will still work, but not perfectly\n  //   consoleWarn('Samples provided to calculateImpulseVelocity in the wrong order')\n  // }\n  if (samples.length === 2) {\n    // if 2 points, basic linear calculation\n    if (samples[1].t === samples[0].t) {\n      // consoleWarn(`Events have identical time stamps t=${samples[0].t}, setting velocity = 0`)\n      return 0\n    }\n    return (samples[1].d - samples[0].d) / (samples[1].t - samples[0].t)\n  }\n  // Guaranteed to have at least 3 points here\n  // start with the oldest sample and go forward in time\n  let work = 0\n  for (let i = samples.length - 1; i > 0; i--) {\n    if (samples[i].t === samples[i - 1].t) {\n      // consoleWarn(`Events have identical time stamps t=${samples[i].t}, skipping sample`)\n      continue\n    }\n    const vprev = kineticEnergyToVelocity(work) // v[i-1]\n    const vcurr = (samples[i].d - samples[i - 1].d) / (samples[i].t - samples[i - 1].t) // v[i]\n    work += (vcurr - vprev) * Math.abs(vcurr)\n    if (i === samples.length - 1) {\n      work *= 0.5\n    }\n  }\n  return kineticEnergyToVelocity(work) * 1000\n}\n\nexport function useVelocity () {\n  const touches: Record<number, CircularBuffer<[number, Touch]> | undefined> = {}\n\n  function addMovement (e: TouchEvent) {\n    Array.from(e.changedTouches).forEach(touch => {\n      const samples = touches[touch.identifier] ?? (touches[touch.identifier] = new CircularBuffer(HISTORY))\n      samples.push([e.timeStamp, touch])\n    })\n  }\n\n  function endTouch (e: TouchEvent) {\n    Array.from(e.changedTouches).forEach(touch => {\n      delete touches[touch.identifier]\n    })\n  }\n\n  function getVelocity (id: number) {\n    const samples = touches[id]?.values().reverse()\n\n    if (!samples) {\n      throw new Error(`No samples for touch id ${id}`)\n    }\n\n    const newest = samples[0]\n    const x: Sample[] = []\n    const y: Sample[] = []\n    for (const val of samples) {\n      if (newest[0] - val[0] > HORIZON) break\n\n      x.push({ t: val[0], d: val[1].clientX })\n      y.push({ t: val[0], d: val[1].clientY })\n    }\n\n    return {\n      x: calculateImpulseVelocity(x),\n      y: calculateImpulseVelocity(y),\n      get direction () {\n        const { x, y } = this\n        const [absX, absY] = [Math.abs(x), Math.abs(y)]\n\n        return absX > absY && x >= 0 ? 'right'\n          : absX > absY && x <= 0 ? 'left'\n          : absY > absX && y >= 0 ? 'down'\n          : absY > absX && y <= 0 ? 'up'\n          : oops()\n      },\n    }\n  }\n\n  return { addMovement, endTouch, getVelocity }\n}\n\nfunction oops (): never {\n  throw new Error()\n}\n", "// Composables\nimport { useVelocity } from '@/composables/touch'\n\n// Utilities\nimport { computed, onBeforeUnmount, onMounted, ref } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\n\nexport function useTouch ({ isActive, isTemporary, width, touchless, position }: {\n  isActive: Ref<boolean>\n  isTemporary: Ref<boolean>\n  width: Ref<number>\n  touchless: Ref<boolean>\n  position: Ref<'left' | 'right' | 'bottom'>\n}) {\n  onMounted(() => {\n    window.addEventListener('touchstart', onTouchstart, { passive: true })\n    window.addEventListener('touchmove', onTouchmove, { passive: false })\n    window.addEventListener('touchend', onTouchend, { passive: true })\n  })\n\n  onBeforeUnmount(() => {\n    window.removeEventListener('touchstart', onTouchstart)\n    window.removeEventListener('touchmove', onTouchmove)\n    window.removeEventListener('touchend', onTouchend)\n  })\n\n  const isHorizontal = computed(() => position.value !== 'bottom')\n\n  const { addMovement, endTouch, getVelocity } = useVelocity()\n  let maybeDragging = false\n  const isDragging = ref(false)\n  const dragProgress = ref(0)\n  const offset = ref(0)\n  let start: [number, number] | undefined\n\n  function getOffset (pos: number, active: boolean): number {\n    return (\n      position.value === 'left' ? pos\n      : position.value === 'right' ? document.documentElement.clientWidth - pos\n      : position.value === 'bottom' ? document.documentElement.clientHeight - pos\n      : oops()\n    ) - (active ? width.value : 0)\n  }\n\n  function getProgress (pos: number, limit = true): number {\n    const progress = (\n      position.value === 'left' ? (pos - offset.value) / width.value\n      : position.value === 'right' ? (document.documentElement.clientWidth - pos - offset.value) / width.value\n      : position.value === 'bottom' ? (document.documentElement.clientHeight - pos - offset.value) / width.value\n      : oops()\n    )\n    return limit ? Math.max(0, Math.min(1, progress)) : progress\n  }\n\n  function onTouchstart (e: TouchEvent) {\n    if (touchless.value) return\n\n    const touchX = e.changedTouches[0].clientX\n    const touchY = e.changedTouches[0].clientY\n\n    const touchZone = 25\n    const inTouchZone: boolean =\n      position.value === 'left' ? touchX < touchZone\n      : position.value === 'right' ? touchX > document.documentElement.clientWidth - touchZone\n      : position.value === 'bottom' ? touchY > document.documentElement.clientHeight - touchZone\n      : oops()\n\n    const inElement: boolean = isActive.value && (\n      position.value === 'left' ? touchX < width.value\n      : position.value === 'right' ? touchX > document.documentElement.clientWidth - width.value\n      : position.value === 'bottom' ? touchY > document.documentElement.clientHeight - width.value\n      : oops()\n    )\n\n    if (\n      inTouchZone ||\n      inElement ||\n      (isActive.value && isTemporary.value)\n    ) {\n      maybeDragging = true\n      start = [touchX, touchY]\n\n      offset.value = getOffset(isHorizontal.value ? touchX : touchY, isActive.value)\n      dragProgress.value = getProgress(isHorizontal.value ? touchX : touchY)\n\n      endTouch(e)\n      addMovement(e)\n    }\n  }\n\n  function onTouchmove (e: TouchEvent) {\n    const touchX = e.changedTouches[0].clientX\n    const touchY = e.changedTouches[0].clientY\n\n    if (maybeDragging) {\n      if (!e.cancelable) {\n        maybeDragging = false\n        return\n      }\n\n      const dx = Math.abs(touchX - start![0])\n      const dy = Math.abs(touchY - start![1])\n\n      const thresholdMet = isHorizontal.value\n        ? dx > dy && dx > 3\n        : dy > dx && dy > 3\n\n      if (thresholdMet) {\n        isDragging.value = true\n        maybeDragging = false\n      } else if ((isHorizontal.value ? dy : dx) > 3) {\n        maybeDragging = false\n      }\n    }\n\n    if (!isDragging.value) return\n\n    e.preventDefault()\n    addMovement(e)\n\n    const progress = getProgress(isHorizontal.value ? touchX : touchY, false)\n    dragProgress.value = Math.max(0, Math.min(1, progress))\n\n    if (progress > 1) {\n      offset.value = getOffset(isHorizontal.value ? touchX : touchY, true)\n    } else if (progress < 0) {\n      offset.value = getOffset(isHorizontal.value ? touchX : touchY, false)\n    }\n  }\n\n  function onTouchend (e: TouchEvent) {\n    maybeDragging = false\n\n    if (!isDragging.value) return\n\n    addMovement(e)\n\n    isDragging.value = false\n\n    const velocity = getVelocity(e.changedTouches[0].identifier)\n    const vx = Math.abs(velocity.x)\n    const vy = Math.abs(velocity.y)\n    const thresholdMet = isHorizontal.value\n      ? vx > vy && vx > 400\n      : vy > vx && vy > 3\n\n    if (thresholdMet) {\n      isActive.value = velocity.direction === ({\n        left: 'right',\n        right: 'left',\n        bottom: 'up',\n      }[position.value] || oops())\n    } else {\n      isActive.value = dragProgress.value > 0.5\n    }\n  }\n\n  const dragStyles = computed(() => {\n    return isDragging.value ? {\n      transform:\n        position.value === 'left' ? `translateX(calc(-100% + ${dragProgress.value * width.value}px))`\n        : position.value === 'right' ? `translateX(calc(100% - ${dragProgress.value * width.value}px))`\n        : position.value === 'bottom' ? `translateY(calc(100% - ${dragProgress.value * width.value}px))`\n        : oops(),\n      transition: 'none',\n    } : undefined\n  })\n\n  return {\n    isDragging,\n    dragProgress,\n    dragStyles,\n  }\n}\n\nfunction oops (): never {\n  throw new Error()\n}\n"],
  "mappings": "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",
  "names": ["useSticky", "rootEl", "isSticky", "layoutItemStyles", "isStuck", "ref", "stuckPosition", "stickyStyles", "computed", "side", "value", "top", "bottom", "height", "undefined", "convertToUnit", "onMounted", "watch", "val", "window", "addEventListener", "onScroll", "passive", "removeEventListener", "immediate", "onBeforeUnmount", "document", "lastScrollTop", "direction", "scrollY", "rect", "getBoundingClientRect", "layoutTop", "parseFloat", "Math", "max", "innerHeight", "HORIZON", "HISTORY", "kineticEnergyToVelocity", "work", "sqrt2", "Math", "sqrt", "abs", "calculateImpulseVelocity", "samples", "length", "t", "d", "i", "vprev", "vcurr", "useVelocity", "touches", "addMovement", "e", "Array", "from", "changedTouches", "forEach", "touch", "identifier", "CircularBuffer", "push", "timeStamp", "endTouch", "getVelocity", "id", "values", "reverse", "Error", "newest", "x", "y", "val", "clientX", "clientY", "direction", "absX", "absY", "oops", "useTouch", "isActive", "isTemporary", "width", "touchless", "position", "onMounted", "window", "addEventListener", "onTouchstart", "passive", "onTouchmove", "onTouchend", "onBeforeUnmount", "removeEventListener", "isHorizontal", "computed", "value", "addMovement", "endTouch", "getVelocity", "useVelocity", "maybeDragging", "isDragging", "ref", "dragProgress", "offset", "start", "getOffset", "pos", "active", "document", "documentElement", "clientWidth", "clientHeight", "oops", "getProgress", "limit", "progress", "Math", "max", "min", "e", "touchX", "changedTouches", "clientX", "touchY", "clientY", "touchZone", "inTouchZone", "inElement", "cancelable", "dx", "abs", "dy", "thresholdMet", "preventDefault", "velocity", "identifier", "vx", "x", "vy", "y", "direction", "left", "right", "bottom", "dragStyles", "transform", "transition", "undefined", "Error", "locations", "VNavigationDrawer", "defineComponent", "name", "props", "color", "String", "disableResizeWatcher", "Boolean", "disableRouteWatcher", "expandOnHover", "floating", "modelValue", "type", "default", "permanent", "rail", "railWidth", "Number", "scrim", "image", "temporary", "touchless", "width", "location", "validator", "value", "includes", "sticky", "makeBorderProps", "makeElevationProps", "makeLayoutItemProps", "makeRoundedProps", "makeTagProps", "tag", "makeThemeProps", "emits", "val", "setup", "attrs", "slots", "isRtl", "useRtl", "themeClasses", "provideTheme", "borderClasses", "useBorder", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "toRef", "elevationClasses", "useElevation", "mobile", "useDisplay", "roundedClasses", "useRounded", "router", "useRouter", "isActive", "useProxiedModel", "v", "ssrBootStyles", "useSsrBoot", "rootEl", "ref", "isHovering", "computed", "toPhysical", "isTemporary", "isSticky", "watch", "currentRoute", "onBeforeMount", "isDragging", "dragProgress", "dragStyles", "useTouch", "position", "layoutSize", "size", "layoutItemStyles", "layoutRect", "layoutItemScrimStyles", "useLayoutItem", "id", "order", "parseInt", "elementSize", "active", "disableTransitions", "absolute", "isStuck", "stickyStyles", "useSticky", "scrimColor", "scrimStyles", "opacity", "transition", "undefined", "left", "convertToUnit", "right", "top", "bottom", "provideDefaults", "VList", "bgColor", "useRender", "hasImage", "prepend", "append"]
}
