{
  "version": 3,
  "sources": ["../../vuetify/src/composables/locale.ts"],
  "sourcesContent": ["// Locales\nimport en from '@/locale/en'\n\n// Composables\nimport { createRtl, RtlSymbol } from '@/composables/rtl'\n\n// Utilities\nimport { computed, inject, provide, ref } from 'vue'\nimport { consoleError, consoleWarn, getObjectValueByPath } from '@/util'\n\n// Types\nimport type { RtlOptions } from '@/composables/rtl'\nimport type { App, InjectionKey, Ref } from 'vue'\nimport type { MaybeRef } from '@/util'\n\nexport interface LocaleMessages {\n  [key: string]: LocaleMessages | string\n}\n\nexport interface LocaleOptions {\n  defaultLocale?: string\n  fallbackLocale?: string\n  messages?: LocaleMessages\n}\n\nexport interface LocaleProps {\n  locale?: string\n  fallbackLocale?: string\n  messages?: LocaleMessages\n}\n\nexport interface LocaleInstance {\n  current: Ref<string>\n  fallback: Ref<string>\n  messages: Ref<LocaleMessages>\n  t: (key: string, ...params: unknown[]) => string\n  n: (value: number) => string\n}\n\nexport interface LocaleAdapter {\n  createRoot: (app?: App) => LocaleInstance\n  getScope: () => LocaleInstance\n  createScope: (options?: LocaleProps) => LocaleInstance\n}\n\nexport const LocaleAdapterSymbol: InjectionKey<LocaleAdapter> = Symbol.for('vuetify:locale-adapter')\nexport const VuetifyLocaleSymbol: InjectionKey<LocaleInstance> = Symbol.for('vuetify:locale')\n\nexport function provideLocale (props?: LocaleProps) {\n  const adapter = inject(LocaleAdapterSymbol)\n\n  if (!adapter) throw new Error('[Vuetify] Could not find injected locale adapter')\n\n  return adapter.createScope(props)\n}\n\nexport function useLocale () {\n  const adapter = inject(LocaleAdapterSymbol)\n\n  if (!adapter) throw new Error('[Vuetify] Could not find injected locale adapter')\n\n  return adapter.getScope()\n}\n\nfunction isLocaleAdapter (x: any): x is LocaleAdapter {\n  return !!x && x.hasOwnProperty('getScope') && x.hasOwnProperty('createScope') && x.hasOwnProperty('createRoot')\n}\n\nexport function createLocale (\n  app: App,\n  options?: (LocaleOptions & RtlOptions) | (LocaleAdapter & RtlOptions),\n) {\n  const adapter = isLocaleAdapter(options) ? options : createDefaultLocaleAdapter(options)\n  const instance = adapter.createRoot(app)\n\n  app?.provide(RtlSymbol, createRtl(instance, options))\n\n  return adapter\n}\n\nconst LANG_PREFIX = '$vuetify.'\n\nconst replace = (str: string, params: unknown[]) => {\n  return str.replace(/\\{(\\d+)\\}/g, (match: string, index: string) => {\n    /* istanbul ignore next */\n    return String(params[+index])\n  })\n}\n\nconst createTranslateFunction = (\n  current: Ref<string>,\n  fallback: Ref<string>,\n  messages: Ref<LocaleMessages>,\n) => {\n  return (key: string, ...params: unknown[]) => {\n    if (!key.startsWith(LANG_PREFIX)) {\n      return replace(key, params)\n    }\n\n    const shortKey = key.replace(LANG_PREFIX, '')\n    const currentLocale = current.value && messages.value[current.value]\n    const fallbackLocale = fallback.value && messages.value[fallback.value]\n\n    let str: string = getObjectValueByPath(currentLocale, shortKey, null)\n\n    if (!str) {\n      consoleWarn(`Translation key \"${key}\" not found in \"${current.value}\", trying fallback locale`)\n      str = getObjectValueByPath(fallbackLocale, shortKey, null)\n    }\n\n    if (!str) {\n      consoleError(`Translation key \"${key}\" not found in fallback`)\n      str = key\n    }\n\n    if (typeof str !== 'string') {\n      consoleError(`Translation key \"${key}\" has a non-string value`)\n      str = key\n    }\n\n    return replace(str, params)\n  }\n}\n\nfunction createNumberFunction (current: Ref<string>, fallback: Ref<string>) {\n  return (value: number, options?: Intl.NumberFormatOptions) => {\n    const numberFormat = new Intl.NumberFormat([current.value, fallback.value], options)\n\n    return numberFormat.format(value)\n  }\n}\n\nexport function createDefaultLocaleAdapter (options?: LocaleOptions): LocaleAdapter {\n  const createScope = (options: {\n    current: MaybeRef<string>\n    fallback: MaybeRef<string>\n    messages: MaybeRef<LocaleMessages>\n  }) => {\n    const current = ref(options.current)\n    const fallback = ref(options.fallback)\n    const messages = ref(options.messages)\n\n    return {\n      current,\n      fallback,\n      messages,\n      t: createTranslateFunction(current, fallback, messages),\n      n: createNumberFunction(current, fallback),\n    }\n  }\n\n  return {\n    createRoot: app => {\n      const rootScope = createScope({\n        current: options?.defaultLocale ?? 'en',\n        fallback: options?.fallbackLocale ?? 'en',\n        messages: options?.messages ?? { en },\n      })\n\n      if (!app) throw new Error('[Vuetify] Could not find default app instance')\n\n      app.provide(VuetifyLocaleSymbol, rootScope)\n\n      return rootScope\n    },\n    getScope: () => {\n      const currentScope = inject(VuetifyLocaleSymbol)\n\n      if (!currentScope) throw new Error('[Vuetify] Could not find injected locale instance')\n\n      return currentScope\n    },\n    createScope: options => {\n      const currentScope = inject(VuetifyLocaleSymbol)\n\n      if (!currentScope) throw new Error('[Vuetify] Could not find injected locale instance')\n\n      const newScope = createScope({\n        current: computed(() => options?.locale ?? currentScope.current.value),\n        fallback: computed(() => options?.locale ?? currentScope.fallback.value),\n        messages: computed(() => options?.messages ?? currentScope.messages.value),\n      })\n\n      provide(VuetifyLocaleSymbol, newScope)\n\n      return newScope\n    },\n  }\n}\n"],
  "mappings": "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",
  "names": ["LocaleAdapterSymbol", "Symbol", "for", "VuetifyLocaleSymbol", "useLocale", "adapter", "inject", "LocaleAdapterSymbol", "Error", "getScope", "isLocaleAdapter", "x", "hasOwnProperty", "createLocale", "app", "options", "createDefaultLocaleAdapter", "instance", "createRoot", "provide", "RtlSymbol", "createRtl", "LANG_PREFIX", "replace", "str", "params", "match", "index", "String", "createTranslateFunction", "current", "fallback", "messages", "key", "startsWith", "shortKey", "currentLocale", "value", "fallbackLocale", "getObjectValueByPath", "consoleWarn", "consoleError", "createNumberFunction", "numberFormat", "Intl", "NumberFormat", "format", "createScope", "ref", "t", "n", "rootScope", "defaultLocale", "en", "VuetifyLocaleSymbol", "currentScope", "newScope", "computed", "locale"]
}
