{
  "version": 3,
  "sources": ["../../vuetify/src/components/VAvatar/VAvatar.tsx"],
  "sourcesContent": ["// Styles\nimport './VAvatar.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { IconValue } from '@/composables/icons'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { defineComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVAvatarProps = propsFactory({\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n  image: String,\n\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeSizeProps(),\n  ...makeTagProps(),\n  ...makeVariantProps({ variant: 'flat' } as const),\n})\n\nexport const VAvatar = defineComponent({\n  name: 'VAvatar',\n\n  props: makeVAvatarProps(),\n\n  setup (props, { slots }) {\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-avatar',\n          {\n            'v-avatar--start': props.start,\n            'v-avatar--end': props.end,\n          },\n          colorClasses.value,\n          densityClasses.value,\n          roundedClasses.value,\n          sizeClasses.value,\n          variantClasses.value,\n        ]}\n        style={[\n          colorStyles.value,\n          sizeStyles.value,\n        ]}\n      >\n        { props.image\n          ? (<VImg key=\"image\" src={ props.image } alt=\"\" />)\n          : props.icon\n            ? (<VIcon key=\"icon\" icon={ props.icon } />)\n            : slots.default?.()\n        }\n\n        { genOverlays(false, 'v-avatar') }\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VAvatar = InstanceType<typeof VAvatar>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAA;AAiBO,IAAMA,mBAAmBC,aAAa;EAC3CC,OAAOC;EACPC,KAAKD;EACLE,MAAMC;EACNC,OAAOC;EAEP,GAAGC,iBAAgB;EACnB,GAAGC,iBAAgB;EACnB,GAAGC,cAAa;EAChB,GAAGC,aAAY;EACf,GAAGC,iBAAiB;IAAEC,SAAS;EAAX,CAAD;AAVwB,CAAD;AAarC,IAAMC,UAAUC,gBAAgB;EACrCC,MAAM;EAENC,OAAOlB,iBAAgB;EAEvBmB,MAAOD,OAAF,MAAoB;AAAA,QAAX;MAAEE;IAAF,IAAW;AACvB,UAAM;MAAEC;MAAcC;MAAaC;IAA7B,IAAgDC,WAAWN,KAAD;AAChE,UAAM;MAAEO;IAAF,IAAqBC,WAAWR,KAAD;AACrC,UAAM;MAAES;IAAF,IAAqBC,WAAWV,KAAD;AACrC,UAAM;MAAEW;MAAaC;IAAf,IAA8BC,QAAQb,KAAD;AAE3Cc,cAAU,MAAA;AAAA,UAAA;AAAA,aAAA,YAAA,MAAA,KAAA;QAAA,SAEC,CACL,YACA;UACE,mBAAmBd,MAAMhB;UACzB,iBAAiBgB,MAAMd;QAFzB,GAIAiB,aAAaY,OACbR,eAAeQ,OACfN,eAAeM,OACfJ,YAAYI,OACZV,eAAeU,KAVV;QAFD,SAcC,CACLX,YAAYW,OACZH,WAAWG,KAFN;MAdD,GAAA;QAAA,SAAA,MAAA,CAmBJf,MAAMX,QAAN,YAAA,MAAA;UAAA,OACa;UADb,OAC2BW,MAAMX;UADjC,OAC6C;QAD7C,GAAA,IAAA,IAEEW,MAAMb,OAAN,YAAA,OAAA;UAAA,OACc;UADd,QAC4Ba,MAAMb;QADlC,GAAA,IAAA,KAAA,iBAEEe,MAAMc,YAFR,OAAA,SAEE,eAAA,KAAAd,KAAK,GAGTe,YAAY,OAAO,UAAR,CA1BP;MAAA,CAAA;IAAA,CAAD;AA8BT,WAAO,CAAA;EACR;AA1CoC,CAAD;",
  "names": ["makeVAvatarProps", "propsFactory", "start", "Boolean", "end", "icon", "IconValue", "image", "String", "makeDensityProps", "makeRoundedProps", "makeSizeProps", "makeTagProps", "makeVariantProps", "variant", "VAvatar", "defineComponent", "name", "props", "setup", "slots", "colorClasses", "colorStyles", "variantClasses", "useVariant", "densityClasses", "useDensity", "roundedClasses", "useRounded", "sizeClasses", "sizeStyles", "useSize", "useRender", "value", "default", "genOverlays"]
}
